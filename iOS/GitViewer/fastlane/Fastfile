# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)


# pre-run checks
# before_all do
#   raise '.env not correctly set, it\'s missing the Apple credentials' unless ENV['APPLE_ACCOUNT'] && ENV['APPLE_TEAM_ID'] && ENV['APPLE_ID']
#   raise '.env not correctly set, it\'s missing Fabric credentials' unless ENV['FABRIC_TOKEN'] && ENV['FABRIC_BUILD_SECRET']
#   raise '.env not correctly set, it\'s missing the Slack url' unless ENV['RELEASE_SLACK_URL']
# end

platform :ios do
  before_all do
    clear_derived_data
    cocoapods(
      clean: true,
      podfile: "Podfile",
      try_repo_update_on_error: true
    )
  end

  lane :setup do
    setup_project
  end

  lane :lint do
    swiftlint(
      reporter: "html",
      output_file: "fastlane/swiftlint.html",
      executable: "Pods/SwiftLint/swiftlint"
    )
  end

  lane :deploy_staging do
    # Execute environment switching / scheme switching here
    beta
    send_slack_notification(platform: 'iOS', type: 'beta', environment: 'Staging')
  end

  lane :deploy_production do
    # Execute environment switching / scheme switching here
    beta
    send_slack_notification(platform: 'iOS', type: 'beta', environment: 'Production')
  end

  lane :deploy_app_store do
    # Execute environment switching / scheme switching here
    send_slack_notification(platform: 'iOS', type: 'beta', environment: 'App Store')
  end

  # Setup project for Github Actions (doesn't have official Fastlane support yet)
  private_lane :setup_project do
    create_keychain(
      name: "github_actions_keychain",
      password: "apples",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false)
  end

  desc 'Build the iOS application and push it to Fabric'
  private_lane :beta do
    increment_build_number(xcodeproj: './GitViewer.xcodeproj')
    match(
      type: 'enterprise',
      readonly: is_ci,
      keychain_name: "github_actions_keychain",
      keychain_password: "apples",
      git_url: ENV['MATCH_REPO'],
      username: "tripwire999"
    )

    build_beta
    upload_to_fabric

  end

  # Build the release version of the app and upload it to the App Store
  private_lane :buid_release do
    gym(
      scheme: 'GitViewer',
      workspace: './GitViewer.xcworkspace'
    )
  end

  # Build the beta app with enterprise export method
  private_lane :build_beta do
    gym(
      scheme: 'GitViewer',
      export_method: 'enterprise',
      workspace: './GitViewer.xcworkspace'
    )
  end

  # Upload beta to Fabric
  private_lane :upload_to_fabric do
    crashlytics(
    api_token: ENV['FABRIC_TOKEN'],
    build_secret: ENV['FABRIC_BUILD_SECRET']
    )
  end

  # Send a slack notification that the build is uploaded
  private_lane :send_slack_notification do |args|
    slack(
      slack_url: ENV['RELEASE_SLACK_URL'],
      channel: "#ci_cd_guild",
      message: "#{args[:platform]} #{args[:type]} app released to Fabric with #{args[:environment]} environment",
      payload: {
        'Build Date' => Time.new.to_s,
        'Built by' => 'Fastlane'
      }
    )
  end
end
